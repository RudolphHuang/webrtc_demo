"use strict";(self["webpackChunkuntitled10"]=self["webpackChunkuntitled10"]||[]).push([[594],{8640:function(e,t,o){o.r(t),o.d(t,{default:function(){return w}});var s=o(6768);const i={class:"videos"},n={id:"webcamVideo",ref:"webcamVideo",autoplay:"",playsinline:""},c={id:"remoteVideo",ref:"remoteVideo",autoplay:"",playsinline:"",controls:""},a=["disabled"],l=["disabled"],r={id:"callInput",ref:"callInput"},d=["disabled"],h=["disabled"];function p(e,t,o,p,u,g){return(0,s.uX)(),(0,s.CE)(s.FK,null,[t[6]||(t[6]=(0,s.Lk)("h2",null,"1. Start your Webcam",-1)),(0,s.Lk)("div",i,[(0,s.Lk)("span",null,[t[4]||(t[4]=(0,s.Lk)("h3",null,"Local Stream",-1)),(0,s.Lk)("video",n,null,512)]),(0,s.Lk)("span",null,[t[5]||(t[5]=(0,s.Lk)("h3",null,"Remote Stream",-1)),(0,s.Lk)("video",c,null,512)])]),(0,s.Lk)("button",{id:"webcamButton",onClick:t[0]||(t[0]=(...e)=>g.start&&g.start(...e)),disabled:u.webcamButtonDisabled},"Start webcam",8,a),t[7]||(t[7]=(0,s.Lk)("h2",null,"2. Create a new Call",-1)),(0,s.Lk)("button",{id:"callButton",onClick:t[1]||(t[1]=(...e)=>g.create&&g.create(...e)),disabled:u.callButtonDisabled},"Create Call (offer)",8,l),t[8]||(t[8]=(0,s.Lk)("h2",null,"3. Join a Call",-1)),t[9]||(t[9]=(0,s.Lk)("p",null,"Answer the call from a different browser window or device",-1)),(0,s.Lk)("input",r,null,512),(0,s.Lk)("button",{id:"answerButton",onClick:t[2]||(t[2]=(...e)=>g.join&&g.join(...e)),disabled:u.answerButtonDisabled},"Answer",8,d),t[10]||(t[10]=(0,s.Lk)("h2",null,"4. Hangup",-1)),(0,s.Lk)("button",{id:"hangupButton",onClick:t[3]||(t[3]=(...e)=>g.hangup&&g.hangup(...e)),disabled:u.hangButtonDisabled},"Hangup",8,h)],64)}o(8111),o(7588);var u=o(1814);const g={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"turn:openrelay.metered.ca:80",username:"openrelayproject",credential:"openrelayproject"}],iceCandidatePoolSize:10};var m={name:"HomeView2",components:{HelloWorld:u.A},data(){return{localStream:null,remoteStream:null,callButtonDisabled:!0,answerButtonDisabled:!1,webcamButtonDisabled:!1,hangButtonDisabled:!0,pc1:null,pc2:null,socket:null,callId:"",isCaller:!1,startTime:null}},created(){this.socket=new WebSocket("https://webrtcserverdemo-production.up.railway.app/"),this.socket.onopen=()=>{console.log("[WebSocket] 连接成功")},this.socket.onclose=e=>{e.wasClean?console.log(`[WebSocket] 连接正常关闭, code=${e.code}, reason=${e.reason}`):console.log("[WebSocket] 连接异常断开")},this.socket.onerror=e=>{console.error("[WebSocket] 发生错误:",e)},this.socket.onmessage=this.onSocketMessage,console.log("[WebRTC] Document tried to create an RTCPeerConnection",g)},mounted(){this.$refs.webcamVideo.addEventListener("loadedmetadata",function(){console.log(`Local video videoWidth: ${this.videoWidth}px,  videoHeight: ${this.videoHeight}px`)}),this.$refs.remoteVideo.addEventListener("loadedmetadata",function(){console.log(`Remote video videoWidth: ${this.videoWidth}px,  videoHeight: ${this.videoHeight}px`)}),this.$refs.remoteVideo.addEventListener("resize",()=>{if(console.log(`Remote video size changed to ${this.$refs.remoteVideo.videoWidth}x${this.$refs.remoteVideo.videoHeight} - Time since pageload ${performance.now().toFixed(0)}ms`),this.startTime){const e=window.performance.now()-this.startTime;console.log("Setup time: "+e.toFixed(3)+"ms"),this.startTime=null}})},methods:{onSocketMessage(e){const t=JSON.parse(e.data);console.log("websocket msg",t),"offer"!==t.type||this.isCaller||this.pc.setRemoteDescription(new RTCSessionDescription(t.offer)),"answer"===t.type&&this.isCaller&&this.pc.setRemoteDescription(new RTCSessionDescription(t.answer)),"candidate"===t.type&&this.pc.addIceCandidate(new RTCIceCandidate(t.candidate)).then(()=>{console.log("addIceCandidate success")}).catch(e=>{console.error("addIceCandidate error",e)})},async start(){console.log("Requesting local stream"),this.webcamButtonDisabled=!0;try{const e=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0});console.log("Received local stream"),this.$refs.webcamVideo.srcObject=e,this.localStream=e,this.callButtonDisabled=!1}catch(e){alert(`getUserMedia() error: ${e.name}`)}},async create(){this.callButtonDisabled=!0,this.hangButtonDisabled=!1,console.log("Starting call"),this.startTime=window.performance.now();const e=this.localStream.getVideoTracks(),t=this.localStream.getAudioTracks();e.length>0&&console.log(`Using video device: ${e[0].label}`),t.length>0&&console.log(`Using audio device: ${t[0].label}`);const o={iceServers:[{urls:"stun:stun.l.google.com:19302"}]};console.log("RTCPeerConnection configuration:",o),this.pc1=new RTCPeerConnection(o),console.log("Created local peer connection object pc1"),this.pc1.addEventListener("icecandidate",e=>this.onIceCandidate(this.pc1,e)),this.pc2=new RTCPeerConnection(o),console.log("Created remote peer connection object pc2"),this.pc2.addEventListener("icecandidate",e=>this.onIceCandidate(this.pc2,e)),this.pc1.addEventListener("iceconnectionstatechange",e=>this.onIceStateChange(this.pc1,e)),this.pc2.addEventListener("iceconnectionstatechange",e=>this.onIceStateChange(this.pc2,e)),this.pc2.addEventListener("track",this.gotRemoteStream),this.localStream.getTracks().forEach(e=>this.pc1.addTrack(e,this.localStream)),console.log("Added local stream to pc1");try{console.log("pc1 createOffer start");const e=await this.pc1.createOffer({offerToReceiveAudio:1,offerToReceiveVideo:1});await this.onCreateOfferSuccess(e)}catch(s){this.onCreateSessionDescriptionError(s)}},onCreateSessionDescriptionError(e){console.log(`Failed to create session description: ${e.toString()}`)},async onCreateOfferSuccess(e){console.log(`Offer from pc1\n${e.sdp}`),console.log("pc1 setLocalDescription start");try{await this.pc1.setLocalDescription(e),this.onSetLocalSuccess(this.pc1)}catch(t){this.onSetSessionDescriptionError(t)}console.log("pc2 setRemoteDescription start");try{await this.pc2.setRemoteDescription(e),this.onSetRemoteSuccess(this.pc2)}catch(t){this.onSetSessionDescriptionError(t)}console.log("pc2 createAnswer start");try{const e=await this.pc2.createAnswer();await this.onCreateAnswerSuccess(e)}catch(t){this.onCreateSessionDescriptionError(t)}},onSetLocalSuccess(e){console.log(`${this.getName(e)} setLocalDescription complete`)},onSetRemoteSuccess(e){console.log(`${this.getName(e)} setRemoteDescription complete`)},onSetSessionDescriptionError(e){console.log(`Failed to set session description: ${e.toString()}`)},gotRemoteStream(e){this.$refs.remoteVideo.srcObject!==e.streams[0]&&(this.$refs.remoteVideo.srcObject=e.streams[0],console.log("pc2 received remote stream",e.streams[0]))},async onCreateAnswerSuccess(e){console.log(`Answer from pc2:\n${e.sdp}`),console.log("pc2 setLocalDescription start");try{await this.pc2.setLocalDescription(e),this.onSetLocalSuccess(this.pc2)}catch(t){this.onSetSessionDescriptionError(t)}console.log("pc1 setRemoteDescription start");try{await this.pc1.setRemoteDescription(e),this.onSetRemoteSuccess(this.pc1)}catch(t){this.onSetSessionDescriptionError(t)}},async onIceCandidate(e,t){try{t.candidate&&(await this.getOtherPc(e).addIceCandidate(t.candidate),this.onAddIceCandidateSuccess(e))}catch(o){this.onAddIceCandidateError(e,o)}console.log(`${this.getName(e)} ICE candidate:\n${t.candidate?t.candidate.candidate:"(null)"}`)},onAddIceCandidateSuccess(e){console.log(`${this.getName(e)} addIceCandidate success`)},onAddIceCandidateError(e,t){console.log(`${this.getName(e)} failed to add ICE Candidate: ${t.toString()}`)},onIceStateChange(e,t){e&&(console.log(`${this.getName(e)} ICE state: ${e.iceConnectionState}`),console.log("ICE state change event: ",t))},async join(){this.isCaller=!1,this.callId=this.$refs.callInput.value,console.log("join",this.callId),this.pc.onicecandidate=e=>{if(e.candidate){const t=e.candidate.candidate,o=t.match(/ typ ([a-z]+)/);if(o){const e=o[1];console.log("[NAT] 发现 candidate 类型:",e)}this.socket.send(JSON.stringify({type:"candidate",callId:this.callId,candidate:e.candidate}))}},this.socket.send(JSON.stringify({type:"join",callId:this.callId})),this.pc.onnegotiationneeded=async()=>{const e=await this.pc.createAnswer();await this.pc.setLocalDescription(e),this.socket.send(JSON.stringify({type:"answer",callId:this.callId,answer:e}))}},async hangup(){console.log("Ending call"),this.pc1.close(),this.pc2.close(),this.pc1=null,this.pc2=null,this.hangButtonDisabled=!0,this.callButtonDisabled=!1},getName(e){return e===this.pc1?"pc1":"pc2"},getOtherPc(e){return e===this.pc1?this.pc2:this.pc1}}},S=o(1241);const C=(0,S.A)(m,[["render",p]]);var w=C}}]);
//# sourceMappingURL=about.12fcf5ed.js.map